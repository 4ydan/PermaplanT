
stage('Build in Docker'){
    node('docker') {
        docker.image('postgres:alpine').withRun('-e "POSTGRES_USER=ci" -e "POSTGRES_PASSWORD=ci"') { c ->
            docker.image('rust:1.68.0-slim').inside("--link ${c.id}:db -e 'DATABASE_URL=postgres://ci:ci@db/ci'") {
                checkout scm
                sh 'cargo install diesel_cli'
                sh './ci/build-scripts/build-backend.sh'
            }
        }
    }
}

stage('Build PR') {
    node('permaplant') {
        checkout scm

        echo "Workspace is '${WORKSPACE}'"
        echo 'Ensure pr service is stopped'
        sh 'sudo /usr/sbin/service permaplant-pr stop'

        withEnv(['DATABASE_URL=postgres://cidb:cidb@127.0.0.1/cidb']) {
            echo 'Resetting the CI DB ...'
            sh 'sudo /usr/local/bin/permaplant-reset-ci.sh'
            echo 'Building...'
            sh './ci/build-scripts/build-backend.sh'
            sh './ci/build-scripts/build-frontend.sh'
            echo 'Deploying'
            sh "sudo /usr/local/bin/permaplant-deploy.sh pr ${WORKSPACE}"
        }
    }
}

// Deploying to Dev only happens on branch "master"
if (env.BRANCH_NAME == 'master') {
    stage('Deploy Dev') {
        node('permaplant') {
            echo 'Deploying to Dev ...'
            sh "sudo /usr/local/bin/permaplant-deploy.sh dev ${WORKSPACE}"
        }
    }
}
